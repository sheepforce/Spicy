{
    "style": "cramer",
    "extensions": ["BangPatterns", "CPP", "DeriveGeneric"],
    "fixities": [],
    "formatting": {
        "op": {
            ",": {
                "force-linebreak": false,
                "spaces": "after",
                "linebreaks": "before"
            },
            "=": {
                "force-linebreak": false,
                "spaces": "both",
                "linebreaks": "after"
            },
            "@": {
                "force-linebreak": false,
                "spaces": "none",
                "linebreaks": "none"
            },
            "default": {
                "force-linebreak": false,
                "spaces": "both",
                "linebreaks": "before"
            },
            ". in expression": {
                "force-linebreak": false,
                "spaces": "both",
                "linebreaks": "before"
            },
            "-> in expression": {
                "force-linebreak": false,
                "spaces": "both",
                "linebreaks": "after"
            },
            ". in type": {
                "force-linebreak": false,
                "spaces": "after",
                "linebreaks": "after"
            },
            "$": {
                "force-linebreak": false,
                "spaces": "both",
                "linebreaks": "after"
            },
            "record in pattern": {
                "force-linebreak": false,
                "spaces": "none",
                "linebreaks": "both"
            },
            "record": {
                "force-linebreak": false,
                "spaces": "after",
                "linebreaks": "none"
            },
            "let": {
                "force-linebreak": true,
                "spaces": "after",
                "linebreaks": "before"
            }
        },
        "group": {
            "$(": {
                "force-linebreak": false,
                "spaces": "both",
                "linebreaks": "none"
            },
            "[ in pattern": {
                "force-linebreak": false,
                "spaces": "both",
                "linebreaks": "after"
            },
            "(# in pattern": {
                "force-linebreak": false,
                "spaces": "both",
                "linebreaks": "after"
            },
            "[p|": {
                "force-linebreak": false,
                "spaces": "none",
                "linebreaks": "none"
            },
            "default": {
                "force-linebreak": false,
                "spaces": "both",
                "linebreaks": "after"
            },
            "( in other": {
                "force-linebreak": false,
                "spaces": "both",
                "linebreaks": "after"
            },
            "{": {
                "force-linebreak": true,
                "spaces": "both",
                "linebreaks": "after"
            },
            "(# in expression": {
                "force-linebreak": false,
                "spaces": "both",
                "linebreaks": "after"
            },
            "[|": {
                "force-linebreak": false,
                "spaces": "none",
                "linebreaks": "none"
            },
            "* in type": {
                "force-linebreak": false,
                "spaces": "none",
                "linebreaks": "after"
            },
            "* in pattern": {
                "force-linebreak": false,
                "spaces": "none",
                "linebreaks": "after"
            },
            "(": {
                "force-linebreak": false,
                "spaces": "both",
                "linebreaks": "after"
            },
            "( in pattern": {
                "force-linebreak": false,
                "spaces": "both",
                "linebreaks": "after"
            },
            "[d|": {
                "force-linebreak": false,
                "spaces": "none",
                "linebreaks": "none"
            },
            "[t|": {
                "force-linebreak": false,
                "spaces": "none",
                "linebreaks": "none"
            },
            "let": {
                "force-linebreak": true,
                "spaces": "both",
                "linebreaks": "before"
            }
        },
        "layout": {
            "infix-app": "flex",
            "if": "vertical",
            "import-spec-list": "flex",
            "con-decls": "try-oneline",
            "declaration": "flex",
            "app": "flex",
            "let": "vertical",
            "record": "vertical",
            "type": "try-oneline",
            "export-spec-list": "vertical",
            "list-comp": "vertical"
        },
        "penalty": {
            "overfull": 10,
            "indent": 1,
            "overfull-once": 500,
            "max-line-length": 100,
            "linebreak": 100
        },
        "indent": {
            "deriving": 2,
            "if": "align",
            "let-binds": "align",
            "import-spec-list": "align-or-indent-by 17",
            "onside": 2,
            "where": 2,
            "typesig": "align",
            "do": "indent-by 2",
            "app": "align",
            "case": "indent-by 2",
            "let-in": "align",
            "where-binds": "indent-by 2",
            "let": "align",
            "export-spec-list": "indent-by 0",
            "multi-if": "align",
            "class": "indent-by 2"
        },
        "align": {
            "let-binds": true,
            "where": true,
            "matches": true,
            "limits": [
                30,
                30
            ],
            "case": true,
            "import-module": true,
            "import-spec": true,
            "class": true,
            "record-fields": true
        },
        "options": {
            "sort-pragmas": true,
            "flexible-oneline": false,
            "decl-no-blank-lines": ["where"],
            "split-language-pragmas": true,
            "align-sum-type-decl": true,
            "sort-import-lists": true,
            "preserve-vertical-space": true,
            "sort-imports": true
        }
    },
    "language": "Haskell2010"
}
