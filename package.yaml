name:                spicy
version:             0.0.0.1
git:                 https://gitlab.com/theoretical-chemistry-jena/quantum-chemistry/Spicy
license:             GPL-3
author:              "Phillip Seeber"
maintainer:          "phillip.seeber@uni-jena.de"
copyright:           "2020 Phillip Seeber"

build-type: Simple
#build-type: Custom
#custom-setup:
#  dependencies:
#    - base
#    - Cabal
#    - accelerate-llvm-native

extra-source-files:
  - README.md
  - LICENSE
  - data/Fonts/*
  - goldentests/input/
  - goldentests/goldenfiles/

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            Web

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description: Please see the README on GitLab at <https://gitlab.com/theoretical-chemistry-jena/quantum-chemistry/Spicy>

flags:
  dev:
    description: "Will not turn compiler warnings into errors and disable optimisations."
    manual: true
    default: false
  llvm:
    description: "Will compile Spicy with the LLVM backend."
    manual: true
    default: false

dependencies:
  - base >= 4.7 && <5
  - optics >= 0.3 && < 0.4
  - attoparsec >= 0.13.1.0 && < 0.14
  - deepseq >= 1.4.2.0 && < 1.5
  - parallel >= 3.2.1.0 && < 3.3
  - aeson >= 1.4.4.0 && < 1.6
  - aeson-pretty >= 0.8.7 && < 0.9
  - stache >= 2.1.0 && < 2.3
  - pathtype >= 0.8.1 && < 0.9
  - data-default >= 0.7.1.1 && < 0.8
  - integer-roots >= 1.0 && < 2
  - yaml >= 0.11.2.0 && < 0.12
  - text >= 1.2.3.1 && < 1.3
  - containers >= 0.6.0.1 && <0.7
  - split >= 0.2.3.3 && < 0.3
  - bytestring >= 0.10.8.2 && < 0.12
  - file-embed >= 0.0.11.1 && < 0.1
  - cmdargs >= 0.10.20 && < 0.11
  - formatting >= 6.3.7 && < 8
  - massiv >= 0.6.0.0 && < 0.7
  - tasty >= 1.2.3 && < 1.4
  - tasty-golden >= 2.3.3 && < 2.4
  - vector >= 0.12.1.2 && < 0.13
  - network >= 3.1.2.1 && < 3.2
  - binary >= 0.8.8.0 && < 0.11
  - vector-binary-instances >= 0.2.5.1 && < 0.3
  - rio >= 0.1.13.0 && < 0.2
ghc-options:
  - -Wall
  - -Wno-unused-top-binds
  - -Wcompat
  - -Widentities
  - -Wincomplete-record-updates
  - -Wincomplete-uni-patterns
  - -Wpartial-fields
  - -Wredundant-constraints

when:
  - condition: flag(dev)
    then:
      ghc-options:
        - -O0
    else:
      ghc-options:
        - -Werror
        - -O2
  - condition: flag(llvm)
    ghc-options:
      - -fllvm

library:
  source-dirs: src
  default-extensions:
    - BangPatterns
    - OverloadedStrings
    - NoImplicitPrelude
    - FlexibleContexts
    - ScopedTypeVariables
    - OverloadedLabels
    - DataKinds
    - FlexibleInstances
    - MultiParamTypeClasses
    - UndecidableInstances
    - TypeFamilies
    - DuplicateRecordFields
    - ScopedTypeVariables
    - DataKinds
    - DeriveAnyClass
    - DeriveDataTypeable
    - DeriveGeneric
    - DeriveTraversable
    - FlexibleInstances
    - GeneralizedNewtypeDeriving
    - TypeApplications
    - RecordWildCards
    - NamedFieldPuns

executables:
  spicy:
    main: spicy.hs
    source-dirs: app
    dependencies:
      - spicy
    default-extensions:
      - BangPatterns
      - OverloadedStrings
      - NoImplicitPrelude
    ghc-options:
     - -threaded
     - -rtsopts
     - -with-rtsopts=-N2

tests:
  unittests:
    main: testing.hs
    source-dirs: app
    dependencies:
      - spicy
      - tasty >= 1.2.3 && < 1.3
      - tasty-hunit >= 0.10.0.2 && < 0.11
      - tasty-golden >= 2.3.1 && < 2.4
    ghc-options:
      - -threaded
      - -rtsopts

benchmarks:
  bench:
    main: bench.hs
    source-dirs: app
    dependencies:
      - spicy
      - criterion >= 1.5.9.0 && < 1.6
    default-extensions:
      - BangPatterns
      - OverloadedStrings
      - NoImplicitPrelude
      - FlexibleContexts
      - ScopedTypeVariables
      - OverloadedLabels
      - DataKinds
      - FlexibleInstances
      - MultiParamTypeClasses
      - UndecidableInstances
      - TypeFamilies
      - DuplicateRecordFields
      - ScopedTypeVariables
      - DataKinds
      - DeriveAnyClass
      - DeriveDataTypeable
      - DeriveGeneric
      - DeriveTraversable
      - FlexibleInstances
      - GeneralizedNewtypeDeriving
      - TypeApplications
      - RecordWildCards
      - NamedFieldPuns
    ghc-options:
     - -threaded
     - -rtsopts
     - -with-rtsopts=-N
